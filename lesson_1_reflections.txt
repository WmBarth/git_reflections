How did viewing a diff bt 2 versions help find the bug:
1.  Bug introduced in changes made.
2.  Diff returns differences only.  Shortens search required to find problem.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
If bugs arise, can locate exact versions when they arose.
More efficient way to then find bug and correct
Maintains record of code that works but is not needed presently.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
Advantage:  commit can be related to each logical change.
Disadvantage:  can forget to commit

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git: program files are inter-related.
Google Docs:  each file is generally independent.

How can you use the commands git log and git diff to view the history of files?
Git Log: Lists all the commits, author, time of commit, notations.  Can find logs required
Git diff: shows differences between two commits.  Can find differences.  Deletions Red, Additions Green

How might using version control make you more confident to make changes that could break something?
Can always revert to working model.

Now that you have your workspace set up, what do you want to try using Git for?
Following FS development and testing
Supporting Mark

